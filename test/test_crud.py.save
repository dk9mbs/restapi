import xml.etree.ElementTree as ET

from core.database import CommandBuilderFactory as factory, DbConnection, FetchXmlParser
from config import CONFIG
from core.appinfo import AppInfo
from services.fetchxml import read_dataview_meta

AppInfo.init(__name__, CONFIG['default'])
connection=DbConnection(AppInfo.get_mysql())


fetch="""
<restxml>
<table name="api_group_permission" alias="p"/>
<select>
    <field name="mode_read" alias="p"/>
    <field name="is_admin" alias="u"/>
    <field name="is_admin" alias="g"/>
</select>
<joins>
    <join type="left" table="api_user_group" alias="ug" condition="p.group_id=ug.group_id"/>
    <join type="left" table="api_group" table_alias="g" condition="ug.group_id=g.id"/>
    <join type="left" table="api_user" table_alias="u" condition="ug.user_id=u.id"/>
</joins>
<fields>
    <field name="vorname" value="Markus"/>
    <field name="Nachname"><value>Buehler</value></field>
</fields>
<filter type="and">
    <condition alias="p" field="table_id" operator="=" value="1"/>
</filter>
</restxml>
"""

parser=FetchXmlParser(fetch)
parser.parse()
sql,params=parser.get_select()
print(sql)
print(parser._tables)

#builder=factory.create_command('delete', fetch_xml=fetch);
#connection.execute(builder)

#builder=factory.create_command('insert', fetch_xml=fetch);
#connection.execute(builder)

#builder=factory.create_command('update', fetch_xml=fetch);
#connection.execute(builder)

connection.commit()
connection.close()


